#!/bin/sh -eu

# This part of monitower reads a single log file as input, and for every line,
# split it as key=values format, and trigger the "$check" for "$host" and store it
# as "$host/$name" in the spool directory.
#
# This way, as few as possible is performed every time, and no complex configuration
# parsing and exploitation is made at every run, and this script is inexpensive enough
# to be run from a /etc/crontab.

check() { set -u +e
	local state now="$(date +%s)"
	for x; do local "var_$x"; done

	mkdir -p "$spool/$var_host/$var_name"

	out=$("check-$var_check" "$@" 2>&1)
	case $? in (0) state=ok ;; (*) state=err ;; esac

	echo "time=$now state=$state" >>$spool/$var_host/$var_name/current

	case $state in
	(err) echo "$out" | monitower-event time="$now" state="$state" "$@" ;;
	esac
}

[ $# -gt 0 ] || set -- /etc/monitower/check.d/*

spool=/var/spool/monitower
IFS='
'
sed -r 's,\\\\,\\s,g; s,\\",\\q,g' "$@" \
| while IFS=' ' read line; do
	check $(echo $line | xargs -n 1) &
done
